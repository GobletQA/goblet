
name: build-docker-images
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      image:
        required: true
        description: 'Name of the app to build'
        type: choice
        default: all
        options:
        - all
        - app
        - action
        - backend
        - screencast

jobs:
  build-images:
    name: Build Images
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: app
            dockerfile: container/Dockerfile
          - service: screencast
            dockerfile: container/Dockerfile.screencast
          # - service: backend
          #   dockerfile: container/Dockerfile.backend
          # Disable action docker image for now
          # - service: action
          #   dockerfile: container/Dockerfile.action


    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
        env:
          NPM_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/goblet-${{ matrix.service }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Generate Builds Args
        id: args
        if: ${{ github.event_name == 'push' || inputs.image == matrix.service || inputs.image == 'all' }}
        run: node -r esbuild-register container/scripts/ds/dockerBuildArgs.js ${{ matrix.service }}

      - name: Build and push Docker image ${{ matrix.service }}
        if: ${{ github.event_name == 'push' || inputs.image == matrix.service || inputs.image == 'all' }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NPM_TOKEN=${{ secrets.GIT_TOKEN }}
            ${{ steps.args.outputs.list }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
