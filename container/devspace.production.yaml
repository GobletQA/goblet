# yaml-language-server: $schema=container/devspace.yaml
version: v1beta11

# Currently we have to define some variables in the yaml that we want to use outside the valuesFiles key in the deployment section
# https://github.com/loft-sh/devspace/issues/1716

# All vars are loaded from the getYamlValue.js script
# This allows them to be loaded from the current ENV, the values.yml files, or a fallback
# See the ../scripts/js/getYamlValue.js script for more information
vars:

# ----- General Values ----- #
- name: NODE_ENV
  source: command
  command: "node ../scripts/js/getYamlValue.js NODE_ENV"

# ----- Docker Image Values ----- #
- name: IMAGE
  source: command
  command: "node ../scripts/js/getYamlValue.js IMAGE"
- name: IMAGE_TAG
  source: command
  command: "node ../scripts/js/getYamlValue.js IMAGE_TAG"

# ----- Backend API Values ----- #
- name: GB_BE_DEPLOYMENT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_BE_DEPLOYMENT"
- name: GB_BE_IMG_URI
  source: command
  command: "node ../scripts/js/resolveImgUri.js BE"
- name: GB_BE_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_BE_PORT"

# ----- DinD Values ----- #
- name: GB_DD_DEPLOYMENT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_DEPLOYMENT"
- name: GB_DD_IMG_URI
  source: command
  command: "node ../scripts/js/resolveImgUri.js DD"
- name: GB_DD_DOCKER_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_DOCKER_PORT"
- name: GB_DD_PRIVILEGED
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_PRIVILEGED"
- name: GB_DD_EXP_ADMIN_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_EXP_ADMIN_PORT"
- name: GB_DD_LOCAL_ADMIN_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_LOCAL_ADMIN_PORT"
- name: GB_DD_API_PROXY_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_API_PROXY_PORT"
- name: GB_DD_WS_PROXY_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_WS_PROXY_PORT"
- name: GB_DD_VNC_PROXY_PORT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_DD_VNC_PROXY_PORT"

# ----- Cert Values ----- #
- name: GB_CR_DEBUG
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_DEBUG"
- name: GB_CR_DEPLOYMENT
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_DEPLOYMENT"
- name: GB_CR_CHART_URL
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_CHART_URL"
- name: GB_CR_CHART_TAG
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_CHART_TAG"
- name: GB_CR_MANAGE_ALL_NS
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_MANAGE_ALL_NS"
- name: GB_CR_SECRET
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_SECRET"
- name: GB_CR_SECRET_KEY
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_SECRET_KEY"
- name: GB_CR_SECRET_ENV
  source: command
  command: "node ../scripts/js/getYamlValue.js GB_CR_SECRET_ENV"

pullSecrets: $(node ../scripts/js/resolvePullSecrets.js)

images:
  goblet-app:
    image: ${IMAGE}
    createPullSecret: true
    injectRestartHelper: false
    tags:
    - ${IMAGE_TAG}
    - '####-${NODE_ENV}-${devspace.git.commit}'
    dockerfile: ./Dockerfile
    context: ../
    build:
      disabled: true

# The `deployments` section tells devspace how to deploy this project into the cluster
deployments:

# ----- DinD API Deployment ----- #
- name: ${GB_DD_DEPLOYMENT}
  helm:
    chart:
      name: ./
    cleanupOnFail: true
    valuesFiles:
    - ./values.yml
    - ./values.${NODE_ENV}.yml
    values:
      containers:
      - name: ${GB_DD_DEPLOYMENT}
        image: ${GB_DD_IMG_URI}
        imagePullPolicy: Always
        env: $(node ../scripts/js/resolveDSEnvs.js dind)
        # TODO: use sysbox or gvisor to remove the need for privileged context
        securityContext: $(node ../scripts/js/resolveSecurity.js DD)
      service: $(node ../scripts/js/resolveService.js $GB_DD_DEPLOYMENT $GB_DD_DOCKER_PORT $GB_DD_WS_PROXY_PORT $GB_DD_API_PROXY_PORT $GB_DD_VNC_PROXY_PORT $GB_DD_EXP_ADMIN_PORT:$GB_DD_LOCAL_ADMIN_PORT)

# ----- Backend API Deployment ----- #
- name: ${GB_BE_DEPLOYMENT}
  helm:
    chart:
      name: ./
    cleanupOnFail: true
    valuesFiles:
    - ./values.yml
    - ./values.${NODE_ENV}.yml
    values:
      containers:
      - image: ${GB_BE_IMG_URI}
        imagePullPolicy: Always
        env: $(node ../scripts/js/resolveDSEnvs.js backend docker-auth:user docker-auth:password)
      service: $(node ../scripts/js/resolveService.js $GB_BE_DEPLOYMENT $GB_BE_PORT)
      ingress: $(node ../scripts/js/resolveIngress.js BE $GB_BE_DEPLOYMENT $GB_BE_PORT "*")

# ----- Certs API Deployment ----- #
- name: ${GB_CR_DEPLOYMENT}
  helm:
    chart:
      name: ${GB_CR_CHART_URL}:${GB_CR_CHART_TAG}
    cleanupOnFail: true
    values:
      debug: ${GB_CR_DEBUG}
      manageAllNamespaces: ${GB_CR_MANAGE_ALL_NS}
      env: $(node ../scripts/js/resolveDSEnvs.js certs $GB_CR_SECRET:$GB_CR_SECRET_KEY:$GB_CR_SECRET_ENV)
