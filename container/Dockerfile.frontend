ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:develop
ARG IMAGE_FROM=$GB_IMAGE_FROM
# ARG IMAGE_FROM=node:16.16.0-alpine3.16

# ---- Prune App Stage ---- #
FROM $IMAGE_FROM AS goblet-pruner
ARG NPM_TOKEN
ENV NPM_TOKEN=$NPM_TOKEN
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@gobletqa/frontend
# ---- End Stage ---- #

# ---- Install Dependencies Stage ---- #
FROM $IMAGE_FROM AS goblet-installer
WORKDIR /app
COPY --from=goblet-pruner /app/out/json/ .
COPY --from=goblet-pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build App Stage ---- #
FROM $IMAGE_FROM AS goblet-builder
WORKDIR /app
COPY --from=goblet-pruner /app/tsconfig* .
COPY --from=goblet-pruner /app/out/full/ .
COPY --from=goblet-installer /app/ .
ENV NODE_ENV=production
RUN yarn turbo run build --filter=@gobletqa/frontend
# ---- End Stage ---- #

# TODO: Update this to build and deploy to firebase instead of serving vai nginx

# ---- Serve App Stage ---- #
FROM $IMAGE_FROM AS goblet-serve
WORKDIR /usr/share/nginx/html
ARG GB_FE_PORT
ENV NODE_ENV=production \
    GB_FE_PORT=$GB_FE_PORT

COPY --from=goblet-builder /app/repos/frontend/build .
COPY ./container/scripts/nginx.conf /etc/nginx/http.d/default.conf
RUN sed -i "s/\$\{GB_FE_PORT\}/$GB_FE_PORT/g" /etc/nginx/http.d/default.conf

EXPOSE $GB_FE_PORT
WORKDIR /etc/nginx


CMD nginx -g 'daemon off;'


