ARG GB_IMAGE_FROM=node:16.16.0-alpine3.16
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Prune App Stage ---- #
FROM $IMAGE_FROM AS goblet-pruner
ARG NPM_TOKEN
ENV NPM_TOKEN=$NPM_TOKEN
WORKDIR /goblet/app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@gobletqa/frontend
# ---- End Stage ---- #

# ---- Install Dependencies Stage ---- #
FROM $IMAGE_FROM AS goblet-installer
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/json/ .
COPY --from=goblet-pruner /goblet/app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build App Stage ---- #
FROM $IMAGE_FROM AS goblet-builder
WORKDIR /goblet/app
ENV HOME=/root \
    DISPLAY=:0.0 \
    DEBUG=pw:api* \
    LC_ALL=C.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    EXPO_CLI_VERSION=5.3.2 \
    DEBIAN_FRONTEND=noninteractive \
    PATH=$PATH:/usr/local/share/.config/yarn/global/node_modules/.bin

COPY --from=goblet-pruner /goblet/app/tsconfig* .
COPY --from=goblet-pruner /goblet/app/out/full/ .
COPY --from=goblet-installer /goblet/app/ .
WORKDIR /goblet/app
ARG FIREBASE_TOKEN
ARG FIREBASE_PROJECT
ENV NODE_ENV=production \
    FIREBASE_TOKEN=$FIREBASE_TOKEN \
    FIREBASE_PROJECT=$FIREBASE_PROJECT

RUN <<EOF
    apt install -y g++ make
    yarn global add expo-cli@$EXPO_CLI_VERSION sharp-cli firebase-tools

    cd /goblet/app/repos/frontend
    NODE_ENV=production yarn build:fe

    rm -rf /goblet/app/repos/frontend/dist
    cp -R /goblet/app/node_modules/keg-core/web-build /goblet/app/repos/frontend/dist

    firebase deploy --non-interactive --token $FIREBASE_TOKEN --project $FIREBASE_PROJECT --only hosting
EOF




