ARG GB_IMAGE_FROM=node:16.16.0-alpine3.16
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Prune App Stage ---- #
FROM $IMAGE_FROM AS goblet-pruner
ARG NPM_TOKEN
ENV NPM_TOKEN=$NPM_TOKEN
WORKDIR /goblet/app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@gobletqa/frontend
# ---- End Stage ---- #

# ---- Install Dependencies Stage ---- #
FROM $IMAGE_FROM AS goblet-installer
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/json/ .
COPY --from=goblet-pruner /goblet/app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build App Stage ---- #
FROM $IMAGE_FROM AS goblet-builder
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/tsconfig* .
COPY --from=goblet-pruner /goblet/app/out/full/ .
COPY --from=goblet-installer /goblet/app/ .
WORKDIR /goblet/app/repos/frontend
ENV NODE_ENV=production
RUN yarn global add expo-cli@$EXPO_CLI_VERSION; \
    yarn build:fe --filter=@gobletqa/frontend
# ---- End Stage ---- #

# TODO: Update this to build and deploy to firebase instead of serving vai nginx

# ---- Serve App Stage ---- #
FROM $IMAGE_FROM AS goblet-serve
WORKDIR /usr/share/nginx/html
ENV HOME=/root \
    DISPLAY=:0.0 \
    DEBUG=pw:api* \
    LC_ALL=C.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    EXPO_CLI_VERSION=5.3.2 \
    DEBIAN_FRONTEND=noninteractive \
    PATH=$PATH:/usr/local/share/.config/yarn/global/node_modules/.bin

ARG GB_FE_PORT
ENV NODE_ENV=production \
    GB_FE_PORT=$GB_FE_PORT

COPY --from=goblet-builder /goblet/app/repos/frontend/dist/. .
COPY ./container/scripts/fe.nginx.conf /etc/nginx/http.d/default.conf
RUN sed -i "s/\$\{GB_FE_PORT\}/$GB_FE_PORT/g" /etc/nginx/http.d/default.conf; \
    echo fs.inotify.max_user_watches=1048576 | tee -a /etc/sysctl.conf; \
    sysctl -p; \
    /bin/sed -i '1s|.*|root:x:0:0:root:/root:/bin/bash|g' /etc/passwd

EXPOSE $GB_FE_PORT
WORKDIR /etc/nginx

CMD nginx -g 'daemon off;'


