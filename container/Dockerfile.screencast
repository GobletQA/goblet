ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:latest
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Setup Stage ---- #
FROM $IMAGE_FROM as goblet-setup
WORKDIR /goblet/app
WORKDIR /goblet/app
ARG GB_SC_PORT=7006
ARG GB_NO_VNC_PORT=26369
ARG GB_VNC_SERVER_PORT=26370
ENV GB_SUB_REPO=screencast \
    GB_SC_PORT=$GB_SC_PORT \
    GB_NO_VNC_PORT=$GB_NO_VNC_PORT \
    GB_VNC_SERVER_PORT=$GB_VNC_SERVER_PORT

RUN mkdir -p /etc/supervisor && \
    rm -rf /ms-playwright/firefox-* /ms-playwright/webkit-* && \
    sed -i 's/# deb/deb/g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install --yes --no-install-recommends \
    novnc \
    net-tools \
    supervisor \
    tigervnc-standalone-server && \
    rm -rf /var/lib/apt/lists/*
# ---- End Stage ---- #


# ---- Tasks Stage ---- #
FROM ubuntu:focal as goblet-tasks
WORKDIR /goblet/app
COPY tasks tasks
COPY .nvmrc .nvmrc
RUN rm -rf tasks/definitions/index.ts && \
    rm -rf tasks/definitions/kube && \
    rm -rf tasks/definitions/deploy && \
    rm -rf tasks/definitions/docker && \
    rm -rf tasks/definitions/devspace && \
    mv tasks/definitions/sc-entry.ts tasks/definitions/index.ts
# ---- End Stage ---- #


# ---- Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app

RUN pnpm add --global dot-json && \
    mkdir -p /goblet/runner

RUN rm -rf /goblet/app/repos/backend && \
    rm -rf /goblet/app/repos/conductor

RUN CI=1 pnpm install --fix-lockfile --prefer-offline --prod
WORKDIR /goblet/app/repos/screencast
RUN pnpm build
# ---- End Stage ---- #


# ---- Runner Stage ---- #
FROM goblet-setup as goblet-runner
WORKDIR /goblet/app

COPY --from=goblet-pruner /goblet/app/. .
COPY --from=goblet-tasks /goblet/app/. .
RUN ln -s /goblet/app/node_modules $HOME/.node_modules && \
    ln -s /goblet/app/node_modules /goblet/node_modules

WORKDIR /goblet/app/repos/screencast

EXPOSE $GB_SC_PORT
EXPOSE $GB_NO_VNC_PORT
EXPOSE $GB_VNC_SERVER_PORT

ENV NODE_ENV=production
CMD [ "/bin/bash", "scripts/initialize.sh" ]
# ---- End Stage ---- #
