
ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:develop
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Turbo Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@@gobletqa/backend
# ---- End Stage ---- #

# ---- Install Stage ---- #
FROM $IMAGE_FROM as goblet-installer
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/json/ .
COPY --from=goblet-pruner /goblet/app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build Stage ---- #
FROM $IMAGE_FROM as goblet-builder
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/full/ .
COPY --from=goblet-installer /goblet/app/ .
RUN yarn turbo run build --filter=@gobletqa/backend && \
    yarn install --frozen-lockfile --production
# ---- End Stage ---- #

# ---- Run Stage ---- #
FROM $IMAGE_FROM as goblet-runner
WORKDIR /goblet/app/repos/screencast
ARG GB_SC_PORT=7005

# TODO: investigate what else needs copied over form build stage
# COPY --from=goblet-builder /goblet/app/repos/screencast/dist repos
# COPY --from=goblet-builder /goblet/app/node_modules/. node_modules/.
# COPY --from=goblet-builder /goblet/app/repos/screencast/package.json repos/screencast/.
# COPY --from=goblet-builder /goblet/app/repos/screencast/tsconfig.build.json repos/screencast/tsconfig.json
# COPY --from=goblet-builder /goblet/app/repos/screencast/node_modules/. repos/screencast/node_modules/.

RUN pm2 install pm2-logrotate && \
    pm2 set pm2-logrotate:retain '7' && \
    pm2 set pm2-logrotate:rotateInterval '0 0 * * 1' && \
    mkdir -p logs

RUN ln -s /goblet/app/node_modules $HOME/.node_modules && \
    ln -s /goblet/app/node_modules /goblet/node_modules
EXPOSE $GB_SC_PORT
CMD [ "yarn", "serve" ]

