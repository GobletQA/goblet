ARG GB_IMAGE_FROM=mcr.microsoft.com/playwright:v1.23.4-focal
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Turbo Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app
RUN yarn global add turbo
COPY . .
# The test-utils repo has a dependecy on the screencast repo
# So by pruning the test-utils repo, we get the screencast repo
# Plus all other code needed to execute tests
RUN turbo prune --docker --scope=@gobletqa/test-utils
COPY ./configs ./out/full/configs
COPY ./tasks ./out/full/tasks
COPY ./gobletRoot.js ./out/full/gobletRoot.js
# ---- End Stage ---- #

# ---- Install Stage ---- #
FROM $IMAGE_FROM as goblet-installer
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/json/ .
COPY --from=goblet-pruner /goblet/app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build Stage ---- #
FROM $IMAGE_FROM as goblet-builder
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/full/ .
COPY --from=goblet-installer /goblet/app/ .
RUN yarn global add turbo
RUN turbo run build --filter=@gobletqa/screencast && \
    yarn install --frozen-lockfile --production
# ---- End Stage ---- #

# ---- Run Stage ---- #
FROM $IMAGE_FROM as goblet-runner
WORKDIR /goblet/app
ENV HOME=/root \
    DISPLAY=:0.0 \
    DEBUG=pw:api* \
    LC_ALL=C.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    DEBIAN_FRONTEND=noninteractive \
    PATH=$PATH:/usr/local/share/.config/yarn/global/node_modules/.bin

RUN apt-get update && apt-get install -y --no-install-recommends \
    novnc \
    tigervnc-standalone-server; \
    apt-get clean && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /var/cache/apk/*; \
    yarn global add pm2; \
    pm2 install pm2-logrotate && \
    pm2 set pm2-logrotate:retain '7' && \
    pm2 set pm2-logrotate:rotateInterval '0 0 * * 1'; \
    echo fs.inotify.max_user_watches=1048576 | tee -a /etc/sysctl.conf; \
    sysctl -p; \
    /bin/sed -i '1s|.*|root:x:0:0:root:/root:/bin/bash|g' /etc/passwd

COPY --from=goblet-builder /goblet/app/. .

WORKDIR /goblet/app/repos/screencast
ARG GB_SC_PORT=7006
ENV GB_SC_PORT=$GB_SC_PORT
EXPOSE $GB_SC_PORT
ARG GB_VNC_SERVER_PORT=26370
ENV GB_VNC_SERVER_PORT=$GB_VNC_SERVER_PORT
EXPOSE $GB_VNC_SERVER_PORT

# TODO: Edd entrypoint to set the DOCKER_HOST env
# Can't be done at build because we don't know the value of the envs
# export DOCKER_HOST="tcp://$GOBLET_DIND_SERVICE_HOST:$GOBLET_DIND_SERVICE_PORT"

CMD [ "yarn", "serve" ]
