ARG GB_IMAGE_FROM=mcr.microsoft.com/playwright:v1.40.1-focal
ARG IMAGE_FROM=$GB_IMAGE_FROM


# ---- Setup Stage  ---- #
FROM $IMAGE_FROM as goblet-setup
WORKDIR /goblet/app
ARG GB_PNPM_VERSION=8.12.1
ARG GB_GIT_GLOBAL_IGNORE=/goblet/.gitignore
ENV PNPM_VERSION=$GB_PNPM_VERSION
ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"

# 1. Enable all sources
# 2. Preinstall any dependecies for settting up the image
RUN npm uninstall -g yarn && \
    apt-get update && \
    apt-get install --yes --no-install-recommends \
    gpg \
    wget \
    curl && \
    rm -rf /var/lib/apt/lists/* && \
    export SHELL="bash" && \
    curl -fsSL https://get.pnpm.io/install.sh | bash - && \
    touch $GB_GIT_GLOBAL_IGNORE && \
    echo "goblet/**/**secrets**.env" >> $GB_GIT_GLOBAL_IGNORE && \
    echo "goblet/**/**values**.env" >> $GB_GIT_GLOBAL_IGNORE && \
    mkdir -p /goblet/app/temp && \
    mkdir -p /goblet/app/.tmp

ARG GB_FE_PORT=19006
ARG GB_BE_PORT=7005
ARG GB_SC_PORT=19011
ARG GB_DD_DEPLOYMENT
ARG GB_NO_VNC_PORT=26369
ARG GB_DT_SERVER_PORT=8000
ARG GB_DD_API_PROXY_PORT=2121
ARG GB_DD_WS_PROXY_PORT=2122
ARG GB_DD_VNC_PROXY_PORT=2123
ARG GB_VNC_SERVER_PORT=26370
ARG GB_DT_PROXY_PORT=19019
ARG GB_DT_REMOTE_DEBUG_PORT=19020
ARG PLAYWRIGHT_BROWSERS_VERSION
ENV HOME=/root \
    DISPLAY=:0.0 \
    LC_ALL=C.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    PWDEBUG=console \
    DEBIAN_FRONTEND=noninteractive \
    GB_GIT_GLOBAL_IGNORE=$GB_GIT_GLOBAL_IGNORE \
    GB_FE_PORT=$GB_FE_PORT \
    GB_BE_PORT=$GB_BE_PORT \
    GB_SC_PORT=$GB_SC_PORT \
    GB_NO_VNC_PORT=$GB_NO_VNC_PORT \
    GB_VNC_SERVER_PORT=$GB_VNC_SERVER_PORT \
    GB_DD_WS_PROXY_PORT=$GB_DD_WS_PROXY_PORT \
    GB_DD_API_PROXY_PORT=$GB_DD_API_PROXY_PORT \
    GB_DD_VNC_PROXY_PORT=$GB_DD_VNC_PROXY_PORT \
    PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 \
    PLAYWRIGHT_BROWSERS_VERSION=$PLAYWRIGHT_BROWSERS_VERSION
EXPOSE $GB_FE_PORT
EXPOSE $GB_BE_PORT
EXPOSE $GB_SC_PORT
EXPOSE $GB_NO_VNC_PORT
EXPOSE $GB_DT_SERVER_PORT
EXPOSE $GB_VNC_SERVER_PORT
EXPOSE $GB_DT_PROXY_PORT
EXPOSE $GB_DT_REMOTE_DEBUG_PORT

COPY .npmrc pnpm-*.yaml ./
RUN pnpm fetch --no-optional --ignore-scripts
COPY . .
# ---- End Stage ---- #


# ---- Run Stage  ---- #
FROM goblet-setup as goblet-dist
WORKDIR /goblet/app
COPY repos/devtools/package.json repos/devtools/
COPY configs/package.json configs/
COPY repos/conductor/package.json repos/conductor/
COPY repos/logger/package.json repos/logger/
COPY repos/latent/package.json repos/latent/
COPY repos/goblet/package.json repos/goblet/
COPY repos/git/package.json repos/git/
COPY repos/repo/package.json repos/repo/
COPY repos/exam/package.json repos/exam/
COPY repos/workflows/package.json repos/workflows/
COPY repos/backend/package.json repos/backend/
COPY repos/screencast/package.json repos/screencast/
COPY repos/shared/package.json repos/shared/
COPY repos/browser/package.json repos/browser/
COPY repos/testify/package.json repos/testify/
COPY repos/environment/package.json repos/environment/

RUN pnpm install --prefer-offline --no-optional --fix-lockfile --force

COPY repos/devtools repos/devtools/
COPY repos/conductor repos/conductor/
COPY repos/logger repos/logger/
COPY repos/latent repos/latent/
COPY repos/goblet repos/goblet/
COPY repos/git repos/git/
COPY repos/repo repos/repo/
COPY repos/workflows repos/workflows/
COPY repos/browser repos/browser/
COPY repos/testify repos/testify/
COPY repos/exam repos/exam/
COPY repos/environment repos/environment/
COPY repos/shared repos/shared/
RUN pnpm build:tsup

COPY repos/backend repos/backend/
COPY repos/screencast repos/screencast/
RUN pnpm build:docker
# ---- End Stage ---- #


# ---- Run Stage  ---- #
FROM goblet-setup as goblet-prod
WORKDIR /goblet/app
RUN pnpm add --global jqn && \
    rm -rf /goblet/app/repos/components && \
    rm -rf /goblet/app/repos/joker && \
    rm -rf /goblet/app/repos/monaco && \
    rm -rf /goblet/app/repos/race && \
    rm -rf /goblet/app/repos/vite && \
    cd /goblet/app/repos/browser && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/conductor && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/devtools && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/environment && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/goblet && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/exam && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/logger && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/latent && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/screencast && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/shared && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/testify && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app/repos/workflows && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    cd /goblet/app && \
    echo "$(cat package.json | jqn 'delete $.devDependencies;JSON.stringify($, null, 2)')" > package.json && \
    echo "$(cat package.json | jqn 'delete $.optionalDependencies;JSON.stringify($, null, 2)')" > package.json && \
    CI=1 pnpm install --fix-lockfile --prod --prefer-offline --force && \
    CI=1 pnpm add typescript -w -D --prod --prefer-offline && \
    pnpm remove --global jqn

COPY --from=goblet-dist /goblet/app/repos/conductor/dist repos/conductor/dist
COPY --from=goblet-dist /goblet/app/repos/logger/dist repos/logger/dist
COPY --from=goblet-dist /goblet/app/repos/latent/dist repos/latent/dist
COPY --from=goblet-dist /goblet/app/repos/goblet/dist repos/goblet/dist
COPY --from=goblet-dist /goblet/app/repos/git/dist repos/git/dist
COPY --from=goblet-dist /goblet/app/repos/repo/dist repos/repo/dist
COPY --from=goblet-dist /goblet/app/repos/exam/dist repos/exam/dist
COPY --from=goblet-dist /goblet/app/repos/workflows/dist repos/workflows/dist
COPY --from=goblet-dist /goblet/app/repos/backend/dist repos/backend/dist
COPY --from=goblet-dist /goblet/app/repos/screencast/dist repos/screencast/dist
COPY --from=goblet-dist /goblet/app/repos/shared/dist repos/shared/dist
COPY --from=goblet-dist /goblet/app/repos/browser/dist repos/browser/dist
COPY --from=goblet-dist /goblet/app/repos/testify/dist repos/testify/dist
COPY --from=goblet-dist /goblet/app/repos/environment/dist repos/environment/dist

# ---- End Stage ---- #
