ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:latest
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Kubectrl Stage ( backend only ) ---- #
FROM bitnami/kubectl:latest as kubectl
# ---- End Stage ---- #

# ---- Setup Stage ---- #
FROM ubuntu:focal as goblet-setup
WORKDIR /goblet/app
COPY --from=kubectl /opt/bitnami/kubectl/bin/kubectl /usr/bin/
ARG GB_PNPM_VERSION=8.7.4
ARG GB_NODE_VERSION=20
ENV PNPM_VERSION=$GB_PNPM_VERSION
ENV NODE_MAJOR=$GB_NODE_VERSION
ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"

RUN sed -i 's/# deb/deb/g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install --yes --no-install-recommends \
    gpg \
    wget \
    curl \
    ca-certificates \
    openssh-client && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install nodejs -y && \
    rm -rf /var/lib/apt/lists/* && \
    curl -fsSL https://get.pnpm.io/install.sh | ENV="$HOME/.shrc" SHELL="$(which sh)" sh -
# ---- End Stage ---- #


# ---- Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app

RUN pnpm add --global dot-json && \
    mkdir -p /goblet/runner/repos && \
    mkdir -p /goblet/runner/configs

RUN rm -rf /goblet/app/repos/browser && \
    rm -rf /goblet/app/repos/exam && \
    rm -rf /goblet/app/repos/screencast && \
    rm -rf /goblet/app/repos/testUtils

RUN cp -R tsconfig.json package.json gobletRoot.js /goblet/runner/. && \
    cp -R configs/aliases.js /goblet/runner/configs/aliases.js && \
    cp -R configs/paths.config.js /goblet/runner/configs/paths.config.js && \
    cp -R configs/aliases.config.js /goblet/runner/configs/aliases.config.js

RUN CI=1 pnpm --filter @gobletqa/backend install --fix-lockfile --prefer-offline

WORKDIR /goblet/app
COPY repos/latent/src repos/latent/src
COPY repos/goblet/src repos/goblet/src
COPY repos/logger/src repos/logger/src
COPY repos/conductor/src repos/conductor/src
COPY repos/environment/src repos/environment/src
COPY repos/workflows/src repos/workflows/src
COPY repos/shared/src repos/shared/src
COPY repos/backend/src repos/backend/src

WORKDIR /goblet/app/repos/backend
RUN mkdir -p /goblet/app/repos/exam/src/types && \
    echo "export {}" > /goblet/app/repos/exam/src/types/index.ts && \
    pnpm build
RUN cp -R dist/goblet.default.config.js /goblet/runner/configs/goblet.default.config.js
RUN pnpm --filter=@gobletqa/backend --prod --no-optional deploy pruned

WORKDIR /goblet/app/repos
RUN cp -R backend/pruned /goblet/runner/repos/backend
RUN cp -R shared/src/templates /goblet/runner/repos/backend/templates

# This makes the image a little smaller, but may not be worth it
# Because then we lose source-mapping for compiled files
# RUN find . -name "*.js.map" -type f -delete
# ---- End Stage ---- #


# ---- Run Stage ---- #
FROM goblet-setup as goblet-runner
WORKDIR /goblet/app

COPY --from=goblet-pruner /goblet/runner /goblet/app

WORKDIR /goblet/app/repos/backend
EXPOSE $GB_BE_PORT
EXPOSE $GB_NO_VNC_PORT

CMD [ "/bin/bash", "scripts/initialize.sh" ]
