ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:latest
ARG IMAGE_FROM=$GB_IMAGE_FROM


# ---- Setup Stage ---- #
FROM $IMAGE_FROM as goblet-setup
WORKDIR /goblet
ENV GB_SUB_REPO=backend
RUN apt-get purge --yes \
    novnc \
    net-tools \
    supervisor \
    tigervnc-standalone-server && \
    apt-get clean && \
    apt-get autoremove --yes && \
    rm -rf /ms-playwright && \
    rm -rf ms-playwright-agent && \
    rm -rf /goblet/app && \
    rm -rf /root/.cache && \
    rm -rf /root/.local && \
    rm -rf /root/.npm
# ---- End Stage ---- #


# ---- Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app

RUN pnpm add --global dot-json && \
    mkdir -p /goblet/runner/repos && \
    mkdir -p /goblet/runner/configs

COPY . .

RUN rm -rf /goblet/app/repos/browser && \
    rm -rf /goblet/app/repos/exam && \
    rm -rf /goblet/app/repos/screencast && \
    rm -rf /goblet/app/repos/testUtils

RUN cd /goblet/app/repos/conductor && \
    pnpm json:rm && \
    cd /goblet/app/repos/environment && \
    pnpm json:rm && \
    cd /goblet/app/repos/goblet && \
    pnpm json:rm && \
    cd /goblet/app/repos/logger && \
    pnpm json:rm && \
    cd /goblet/app/repos/latent && \
    pnpm json:rm && \
    cd /goblet/app/repos/shared && \
    pnpm json:rm && \
    cd /goblet/app/repos/workflows && \
    pnpm json:rm && \
    cd /goblet/app && \
    pnpm json:rm && \
    dot-json package.json devDependencies -d

RUN cp -R tsconfig.json package.json gobletRoot.js /goblet/runner/. && \
    cp -R configs/aliases.js /goblet/runner/configs/aliases.js && \
    cp -R configs/paths.config.js /goblet/runner/configs/paths.config.js && \
    cp -R configs/aliases.config.js /goblet/runner/configs/aliases.config.js

ENV CI=true
RUN pnpm --filter @gobletqa/backend install --fix-lockfile --prefer-offline

WORKDIR /goblet/app/repos/backend
RUN pnpm build
RUN cp -R dist/goblet.default.config.js /goblet/runner/configs/goblet.default.config.js
RUN cd /goblet/app/repos/backend && \
    pnpm json:rm

RUN pnpm --filter=@gobletqa/backend --prod --no-optional deploy pruned

WORKDIR /goblet/app/repos
RUN cp -R backend/pruned /goblet/runner/repos/backend
RUN cp -R shared/src/templates /goblet/runner/repos/backend/templates

WORKDIR /goblet/runner
RUN find . -name "*.js.map" -type f -delete
# ---- End Stage ---- #


# ---- Run Stage ---- #
FROM goblet-setup as goblet-builder
WORKDIR /goblet/app

ARG GB_BE_PORT=7005
ARG GB_NO_VNC_PORT=26369
ARG GB_DD_API_PROXY_PORT=2121
ARG GB_DD_WS_PROXY_PORT=2122
ARG GB_DD_VNC_PROXY_PORT=2123

ENV GB_BE_PORT=$GB_BE_PORT \
    GB_NO_VNC_PORT=$GB_NO_VNC_PORT \
    DEBIAN_FRONTEND=noninteractive \
    GB_DD_WS_PROXY_PORT=$GB_DD_WS_PROXY_PORT \
    GB_DD_API_PROXY_PORT=$GB_DD_API_PROXY_PORT \
    GB_DD_VNC_PROXY_PORT=$GB_DD_VNC_PROXY_PORT

COPY --from=goblet-pruner /goblet/runner /goblet/app

WORKDIR /goblet/app/repos/backend
EXPOSE $GB_BE_PORT
EXPOSE $GB_NO_VNC_PORT

CMD [ "/bin/bash", "scripts/initialize.sh" ]
