ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:latest
ARG IMAGE_FROM=$GB_IMAGE_FROM


# ---- Setup Stage ---- #
FROM $IMAGE_FROM as goblet-setup
WORKDIR /goblet/app
ENV GB_SUB_REPO=backend
RUN apt-get purge --yes \
    novnc \
    net-tools \
    supervisor \
    tigervnc-standalone-server && \
    apt-get clean && \
    apt-get autoremove --yes && \
    rm -rf /ms-playwright && \
    rm -rf ms-playwright-agent
# ---- End Stage ---- #


# ---- Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app
COPY . .
# Clean up repo for backend
RUN pnpm add --global turbo dot-json && \
    rm -rf /goblet/app/repos/components && \
    rm -rf /goblet/app/repos/exam && \
    rm -rf /goblet/app/repos/monaco && \
    rm -rf /goblet/app/repos/race && \
    rm -rf /goblet/app/repos/screencast && \
    rm -rf /goblet/app/repos/testUtils && \
    rm -rf /goblet/app/repos/vite && \
    cd /goblet/app/repos/backend && \
    pnpm json:rm && \
    cd /goblet/app/repos/conductor && \
    pnpm json:rm && \
    cd /goblet/app/repos/environment && \
    pnpm json:rm && \
    cd /goblet/app/repos/goblet && \
    pnpm json:rm && \
    cd /goblet/app/repos/logger && \
    pnpm json:rm && \
    cd /goblet/app/repos/latent && \
    pnpm json:rm && \
    cd /goblet/app/repos/shared && \
    pnpm json:rm && \
    cd /goblet/app/repos/workflows && \
    pnpm json:rm && \
    cd /goblet/app && \
    pnpm json:rm && \
    dot-json package.json devDependencies -d

RUN turbo prune --docker --scope=@gobletqa/backend
COPY ./configs ./out/full/configs
COPY ./gobletRoot.js ./out/full/gobletRoot.js
COPY ./tsconfig.json ./out/full/tsconfig.json
# ---- End Stage ---- #


# ---- Install Stage ---- #
FROM goblet-setup as goblet-installer
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/json/ .
COPY --from=goblet-pruner /goblet/app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install --fix-lockfile --shamefully-hoist
# ---- End Stage ---- #


# ---- Build Stage ---- #
FROM goblet-setup as goblet-builder
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/full/ /goblet/app/
COPY --from=goblet-installer /goblet/app/ /goblet/app/
WORKDIR /goblet/app/repos/backend
RUN pnpm build:goblet && \
    pnpm build:docker

WORKDIR /goblet/app
RUN mkdir -p /goblet-runner/configs
RUN mkdir -p /goblet-runner/repos/backend
RUN cp -R /goblet/app/repos/backend/dist/goblet.default.config.js /goblet-runner/configs/goblet.default.config.js
RUN cp -R /goblet/app/gobletRoot.js /goblet-runner/gobletRoot.js
RUN cp -R /goblet/app/tsconfig.json /goblet-runner/tsconfig.json
RUN cp -R /goblet/app/configs/aliases.js /goblet-runner/configs/aliases.js
RUN cp -R /goblet/app/configs/paths.config.js /goblet-runner/configs/paths.config.js
RUN cp -R /goblet/app/configs/aliases.config.js /goblet-runner/configs/aliases.config.js
RUN cp -R /goblet/app/repos/shared/src/templates /goblet-runner/repos/backend/templates
RUN cp -R /goblet/app/repos/backend/tsconfig.json /goblet-runner/repos/backend/tsconfig.json
RUN cp -R /goblet/app/repos/backend/scripts /goblet-runner/repos/backend/scripts
RUN cp -R /goblet/app/repos/backend/dist /goblet-runner/repos/backend/dist
RUN cp -R /goblet/app/repos/backend/package.json /goblet-runner/repos/backend/package.json
RUN cp -R /goblet/app/repos/backend/node_modules /goblet-runner/repos/backend/node_modules
RUN cp -R /goblet/app/node_modules /goblet-runner/node_modules
# ---- End Stage ---- #


# ---- Run Stage ---- #
FROM goblet-setup as goblet-runner
WORKDIR /goblet/app

ARG GB_BE_PORT=7005
ARG GB_NO_VNC_PORT=26369
ARG GB_DD_API_PROXY_PORT=2121
ARG GB_DD_WS_PROXY_PORT=2122
ARG GB_DD_VNC_PROXY_PORT=2123

ENV GB_BE_PORT=$GB_BE_PORT \
    GB_NO_VNC_PORT=$GB_NO_VNC_PORT \
    DEBIAN_FRONTEND=noninteractive \
    GB_DD_WS_PROXY_PORT=$GB_DD_WS_PROXY_PORT \
    GB_DD_API_PROXY_PORT=$GB_DD_API_PROXY_PORT \
    GB_DD_VNC_PROXY_PORT=$GB_DD_VNC_PROXY_PORT

COPY --from=goblet-builder /goblet-runner /goblet/app

WORKDIR /goblet/app/repos/backend
EXPOSE $GB_BE_PORT
EXPOSE $GB_NO_VNC_PORT

CMD [ "/bin/bash", "scripts/initialize.sh" ]

