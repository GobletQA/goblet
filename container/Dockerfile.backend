ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:develop
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Prune App Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@gobletqa/backend
COPY ./configs ./out/full/configs
COPY ./gobletRoot.js ./out/full/gobletRoot.js

# ---- End Stage ---- #

# ---- Install Stage ---- #
FROM $IMAGE_FROM as goblet-installer
WORKDIR /app
COPY --from=goblet-pruner /app/out/json/ .
COPY --from=goblet-pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build Stage ---- #
FROM $IMAGE_FROM as goblet-builder
WORKDIR /app
COPY --from=goblet-pruner /app/out/full/ .
COPY --from=goblet-installer /app/ .
RUN yarn global add turbo
RUN turbo run build --filter=@gobletqa/backend && \
    yarn install --frozen-lockfile --production
# ---- End Stage ---- #

# ---- Run Stage ---- #
FROM $IMAGE_FROM as goblet-runner
WORKDIR /usr/src/app
ARG DOC_APP_PATH=/app

COPY --from=goblet-builder /app .

# # TODO: investigate what else needs copied over form build stage
# COPY --from=goblet-builder /app/repos/backend/package.json repos/backend/.
# COPY --from=goblet-builder /app/repos/backend/tsconfig.json repos/backend/.
# COPY --from=goblet-builder /app/node_modules/. node_modules/.
# COPY --from=goblet-builder /app/repos/backend/node_modules/. repos/backend/node_modules/.
# COPY --from=goblet-builder /app/repos/backend/dist repos/backend/dist

# WORKDIR /usr/src/app/repos/backend
# ARG GB_BE_PORT=7005
# ENV GB_BE_PORT=$GB_BE_PORT
# EXPOSE $GB_BE_PORT
# CMD [ "yarn", "serve" ]
