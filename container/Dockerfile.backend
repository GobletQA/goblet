ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:latest
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Kubectrl Stage ( backend only ) ---- #
# TODO: validate if this is still needed
# Becuase the kubernetes npm package is used instead
FROM bitnami/kubectl:latest as kubectl
# ---- End Stage ---- #

# ---- Setup Stage ---- #
FROM ubuntu:focal as goblet-setup
WORKDIR /goblet/app
COPY --from=kubectl /opt/bitnami/kubectl/bin/kubectl /usr/bin/
ARG GB_PNPM_VERSION=8.12.1
ARG GB_NODE_VERSION=20
ENV PNPM_VERSION=$GB_PNPM_VERSION
ENV NODE_MAJOR=$GB_NODE_VERSION
ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"

RUN sed -i 's/# deb/deb/g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install --yes --no-install-recommends \
    gpg \
    wget \
    curl \
    ca-certificates \
    openssh-client && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install nodejs -y && \
    rm -rf /var/lib/apt/lists/* && \
    curl -fsSL https://get.pnpm.io/install.sh | ENV="$HOME/.shrc" SHELL="$(which sh)" sh -
# ---- End Stage ---- #

# ---- Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app

RUN mkdir -p /goblet/runner/repo && \
    rm -rf /goblet/app/repos/browser && \
    rm -rf /goblet/app/repos/exam && \
    rm -rf /goblet/app/repos/screencast && \
    rm -rf /goblet/app/repos/testify && \
    cp -R package.json gobletRoot.js /goblet/runner/.

COPY container/tsconfig.docker.json /goblet/runner/tsconfig.json
RUN CI=1 pnpm install --fix-lockfile --prefer-offline

WORKDIR /goblet/app/repos/backend
RUN mkdir -p /goblet/app/repos/exam/src/types && \
    echo "export {}" > /goblet/app/repos/exam/src/types/index.ts && \
    echo "{}" > /goblet/app/repos/exam/tsconfig.json && \
    mkdir -p /goblet/app/repos/screencast/src/types && \
    echo "export {}" > /goblet/app/repos/screencast/src/types/index.ts && \
    echo "{}" > /goblet/app/repos/screencast/tsconfig.json && \
    pnpm build

WORKDIR /goblet/app

RUN pnpm --filter=@gobletqa/backend --prod deploy /goblet/runner/repos/backend
# Seems there's a bug in pnpm, and latent doesn't get copied over
# Even tried adding latent as a dep to backend, and still doesnt show up
# For now explicitly copy it.
RUN cp -R /goblet/app/repos/latent/dist /goblet/runner/repos/backend/node_modules/.pnpm/file+repos+latent/node_modules/@gobletqa/latent/dist
# ---- End Stage ---- #


# ---- Run Stage ---- #
FROM goblet-setup as goblet-runner
WORKDIR /goblet/app

ARG GB_BE_PORT=7005
ARG GB_NO_VNC_PORT=26369
ARG GB_DT_SERVER_PORT=8000
ARG GB_DT_PROXY_PORT=19019
ARG GB_DT_REMOTE_DEBUG_PORT=19020

ENV GB_BE_PORT=$GB_BE_PORT \
    GB_NO_VNC_PORT=$GB_NO_VNC_PORT \
    GB_DT_SERVER_PORT=$GB_DT_SERVER_PORT \
    GB_DT_PROXY_PORT=$GB_DT_PROXY_PORT \
    GB_DT_REMOTE_DEBUG_PORT=$GB_DT_REMOTE_DEBUG_PORT \
    NODE_ENV=production

COPY --from=goblet-pruner /goblet/runner /goblet/app

# This is not great, but we need @keg-hub/jsutils in the root directory
# Because the gobletRoot.js file calls it
# But, it's not installed because its a dev dependency
# I didn't want to add it just to make one method call, in one file
RUN ln -s /goblet/app/repos/backend/node_modules /goblet/app/node_modules

WORKDIR /goblet/app/repos/backend

EXPOSE $GB_BE_PORT
EXPOSE $GB_NO_VNC_PORT
EXPOSE $GB_DT_SERVER_PORT

CMD [ "/bin/bash", "scripts/initialize.sh" ]
