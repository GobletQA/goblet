# TODO: update this to use a mounted volume that is shared with the conductor instance
# Then set the "DOCKER_TLS_CERTDIR" env to the directory of that shared volume
# Then update the conductor to use certs in the volume to connect to the docker API
# See more info here => https://hub.docker.com/_/docker

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "goblet-dind"
  labels:
    "app.kubernetes.io/name": "devspace-app"
    "app.kubernetes.io/component": "goblet-dind"
    "app.kubernetes.io/managed-by": "Helm"
  annotations:
    "helm.sh/chart": "component-chart-0.0.0"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      "app.kubernetes.io/name": "devspace-app"
      "app.kubernetes.io/component": "goblet-dind"
      "app.kubernetes.io/managed-by": "Helm"
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": "devspace-app"
        "app.kubernetes.io/component": "goblet-dind"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        "helm.sh/chart": "component-chart-0.0.0"
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: dind-daemon
        image: docker:dind
        # TODO: remove this once shared certs volume is configured
        command: ["dockerd"]
        args: [ "--host=unix:///var/run/docker.sock", "--host=tcp://0.0.0.0:2375"]
        # TODO: Figure out the resources to give to the docker instance
        # resources:
        #   requests:
        #     cpu: 20m
        #     memory: 512Mi
        # TODO: use sysbox or gvisor to remove the need for privileged context
        securityContext:
          privileged: true
        # TODO: add shared certs volume for security
        volumeMounts:
        - name: docker-graph-storage
          mountPath: /var/lib/docker
      volumes:
      - name: docker-graph-storage
        emptyDir: {}
