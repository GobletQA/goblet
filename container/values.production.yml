env:

# ---- General Shared ENVs ---- #

  GB_KUBE_CONTEXT: lke70246-ctx
  GB_KUBE_NAMESPACE: gb-production
  GB_HOST_DOMAIN: dev.gobletqa.app
  NODE_ENV: production
  GB_WS_BROWSER: false
  GB_LOCAL_DEV_MODE: false
  DEVSPACE_INJECT_LOCAL: false
  GB_LOG_LEVEL: silly


  # --- Custom backend devspace config --- #
  GB_BE_DEVSPACE_CONFIG: container/devspace.yaml

# ---- Backend ENVs ---- #
  # Use ssl in production, so port is always 443
  # The ingress will terminate and proxy to backend as 7005
  GB_BE_HOST: backend.dev.gobletqa.app
  # Name of the kubernetes secret used in the ingress
  GB_BE_SECRET_TLS_NAME: gb-production-tls

  # --- Goblet-Certs ENVs  --- #
  GB_CR_SECRET: provider-auth
  GB_CR_SECRET_KEY: token
  GB_CR_SECRET_ENV: LINODE_V4_API_KEY
  GB_CR_USER_EMAIL: lancetipton04@gmail.com
  GB_CR_SECRET_VALUE_PATH: "{{ cli.paths.config }}/linode/api-token"

  # --- VNC ENVs --- #
  # TODO: these will change if ever running locally and in production environment
  GB_VNC_ACTIVE: true
  GB_PW_SOCKET_ACTIVE: false

  # --- CONTAINER TIMEOUT ENVs --- #
  GB_SC_IDLE_TIMEOUT_ACTIVE: true
  # Interval in seconds that the inactive check will run
  GB_SC_IDLE_INTERVAL: 60
  # Number of times the inactive check can be true before shutting down the container
  GB_SC_IDLE_THRESHOLD: 10
  # Time in seconds to wait before starting to check for active connections, i.e. 180 === 3min
  GB_SC_IDLE_WAIT_TO_START: 3600
  # Max number of connections that can exist to consider the container to be idle
  GB_SC_IDLE_CONNECTION_THRESHOLD: 1
