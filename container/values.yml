
# See here https://devspace.cloud/docs/cli/deployment/components/configuration/overview-specification
# For information on how to configure this file,

# A list of containers that should run the pods of this component
containers: []
initContainers: []

service:
  # type: NodePort
  type: ClusterIP
  labels: {}
  annotations: {}
  ports: []
  externalIPs: []

labels: {}
annotations: {}

ingress:
  ingressClassName: nginx
  labels: {}
  annotations: {}
  rules: []

# Defines image pull secrets
# DevSpace CLI will append all pull secrets which are automatically created
# More infos on: https://devspace.cloud/docs/cli/image-building/workflow-basics#8-create-image-pull-secret
pullSecrets: []


env:

# ---- General Shared ENVs ---- #
  IMAGE_TAG: latest
  DOCKER_REGISTRY: ghcr.io
  IMAGE: 'ghcr.io/gobletqa/goblet-app'
  DISPLAY: ":0.0"
  # **IMPORTANT** - Must exactly match the version use in $GB_BASE_IMAGE_FROM
  PLAYWRIGHT_BROWSERS_VERSION: 1.23.4

# ---- Goblet Shared ENVs ---- #
  GB_TOKEN: a-10K3n-g0bLe1
  GB_SH_MOUNT_ROOT: /goblet/repos
  GB_SH_LOCAL_MOUNT: goblet-local/current
  GB_SERVER_ORIGINS: 'localhost,gobletqa.app,dev.gobletqa.app,gobletqa-develop.local.keghub.io'
  # TODO: @lance-tipton - Make this more dynamic - value comes from firebase?
  GB_GITHUB_AUTH_USERS: geoffrey.schultz@gmail.com,lancetipton04@gmail.com,lance.tipton@workboard.com
  GB_BUILD_PLATFORMS: linux/amd64,linux/arm64
  
  GB_VALIDATION_KEY: "gb-1234567"
  GB_VALIDATION_HEADER: GB-Validation-Key

  # ---- Docker Images ---- #
  # Image tags added to all built images
  GB_IMAGE_BUILD_TAGS: values,package
  # Then, all sub goblet images are built from the goblet-base image
  GB_IMAGE_FROM: mcr.microsoft.com/playwright:v1.23.4-focal

  # ---- Logger ENVs ---- #
  # Enable to set custom log-level for conductor
  GB_LOG_LEVEL: debug
  GB_LOG_LABEL: Goblet
  GB_LOG_DISABLED: false
  GB_LOG_EXIT_ON_ERR: false
  GB_LOG_PRETTY_PRINT: true
  GB_LOG_HANDLE_EXCEPTION: true

# ---- App Development ENVs ---- #
  # Needed for conductor
  # GB_APP_DOC_VOLUMES: /var/run/docker.sock
  # Uncomment this to mount the whole repo into the container
  # GB_APP_DOC_VOLUMES: ".:/goblet/app,/var/run/docker.sock"

# ---- Backend ENVs ---- #
  GB_BE_PORT: 7005
  GB_BE_SECURE_PORT: 443
  # Host the FE uses to connect to the BE
  GB_BE_HOST: 0.0.0.0
  # Port to forward connections from backend API to screencast
  GB_NO_VNC_PORT: 26369
  GB_NO_VNC_PATH: /novnc
  GB_NO_VNC_PROTOCOL: 'ws'

  # Default to the backend api and host
  # But should be set when running as own server
  GB_BE_IMAGE_TAG: latest
  GB_BE_DEPLOYMENT: goblet-backend
  GB_BE_IMAGE: 'ghcr.io/gobletqa/goblet-backend'
  GB_BE_IMAGE_FROM: 'node:16.16.0-alpine3.16'

  # ---- Backend Websocket ENVs ---- #
  GB_BE_SOCKET_PORT: 7005
  GB_BE_SOCKET_HOST: 0.0.0.0
  GB_BE_SOCKR_PATH: '/sockr-socket'

  # --- Backend JWT AUTH --- #
  GB_BE_JWT_EXP: '7200000'
  GB_BE_JWT_CREDENTIALS: true
  GB_BE_JWT_REFRESH_EXP: '7200000'
  GB_BE_JWT_SECRET: k3G-H3rkiN-1234
  GB_BE_JWT_KEY: goblet-be-auth-token
  GB_BE_JWT_REFRESH_SECRET: 4926-G0b13T-g3K

  # --- Backend COOKIE AUTH --- #
  # GB_BE_COOKIE_SECRET: ""
  GB_BE_COOKIE_SECURE: true
  GB_BE_COOKIE_NAME: goblet
  GB_BE_COOKIE_HTTP_ONLY: true
  GB_BE_COOKIE_OVERWRITE: true
  GB_BE_COOKIE_SAME_SITE: None
  GB_BE_COOKIE_KEY: goblet-cookie-7979

# ---- Frontend ENVs ---- #
  GB_FE_PORT: 19006
  GB_FE_IMAGE_TAG: latest
  GB_FE_DEPLOYMENT: goblet-frontend
  GB_FE_IMAGE: 'ghcr.io/gobletqa/goblet-frontend'
  # --- TODO: Update this as needed for deployments
  GB_FE_ROOT_DIR: /goblet/app/repos/frontend

# --- CONDUCTOR ENVs --- #
  # Host the FE uses to connect to the BE
  GB_CD_PORT: 9901
  # GB_CD_HOST: host.docker.internal
  GB_CD_HOST: local.gobletqa.app
  # Not currently used
  # GB_CD_SECURE_PORT: 9902
  GB_CD_IMAGE_TAG: latest
  GB_CD_DEPLOYMENT: goblet-conductor
  GB_CD_IMAGE: 'ghcr.io/gobletqa/goblet-conductor'
  GB_CD_IMAGE_FROM: 'node:16.16.0-alpine3.16'

  GB_CD_TIMEOUT: 5000
  GB_CD_SERVER_SECRET: "c0nDuC7oR-6ObL3T"
  # Enable to set custom log-level for conductor
  # GB_CD_LOG_LEVEL: info
  GB_CD_PIDS_LIMIT: 500
  GB_CD_RATE_LIMIT: 5000
  # Salting the user hash string. Not intended to be secure just anonymous
  GB_CD_HASH_KEY: C0nDuc10R

  # When manually running the conductor app in a container
  # This ensures the docker.sock is mounted into the container
  GB_CD_DOC_VOLUMES: /var/run/docker.sock
  GB_CD_CONTROLLER_TYPE: Docker

# --- SCREENCAST ENVs --- #
  GB_SC_IMAGE_TAG: latest
  GB_SC_DEPLOYMENT: goblet-screencast
  GB_SC_IMAGE: 'ghcr.io/gobletqa/goblet-screencast'
  # Screencast API port
  GB_SC_PORT: 7006
  # URL where the screencast is being displayed
  # This is the URL of the server the proxy connects to
  # Update this to call an externally available VNC websocket host
  GB_SC_HOST: 0.0.0.0
  # Host of VNC server for tigerVNC, that receives requests from the proxy
  # This is internal, and generally should not change
  GB_VNC_SERVER_HOST: 0.0.0.0
  GB_VNC_SERVER_PORT: 26370
  
  GB_VNC_VIEW_HEIGHT: 900
  GB_VNC_VIEW_WIDTH: 1440

# --- DIND ENVs --- #
  GB_DD_PORT: 2375
  # GB_DD_PORT: 2376
  GB_DD_HOST: 0.0.0.0
  GB_DD_IMAGE_TAG: latest
  GB_DD_DEPLOYMENT: goblet-dind
  GB_DD_IMAGE: 'ghcr.io/gobletqa/goblet-dind'
  GB_DD_IMAGE_FROM: 'docker:20.10.17-dind'
  GB_DD_PRIVILEGED: true