
ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:develop
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Turbo Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@gobletqa/conductor
# ---- End Stage ---- #

# ---- Install Stage ---- #
FROM $IMAGE_FROM as goblet-installer
WORKDIR /app
COPY --from=goblet-pruner /app/out/json/ .
COPY --from=goblet-pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build Stage ---- #
FROM $IMAGE_FROM as goblet-builder
WORKDIR /app
COPY --from=goblet-pruner /app/out/full/ .
COPY --from=goblet-installer /app/ .
RUN yarn turbo run build --filter=@gobletqa/conductor && \
    yarn install --frozen-lockfile --production
# ---- End Stage ---- #

# ---- Run Stage ---- #
FROM $IMAGE_FROM as goblet-runner
WORKDIR /app/repos/conductor
ARG DOC_APP_PATH=/app
ARG GB_CD_PORT=9901

# TODO: investigate what else needs copied over form build stage
COPY --from=goblet-builder /app/repos/conductor/dist repos
COPY --from=goblet-builder /app/node_modules/. node_modules/.
COPY --from=goblet-builder /app/repos/conductor/package.json repos/conductor/.
COPY --from=goblet-builder /app/repos/conductor/tsconfig.json repos/conductor/tsconfig.json
COPY --from=goblet-builder /app/repos/conductor/node_modules/. repos/conductor/node_modules/.

RUN pm2 install pm2-logrotate && \
    pm2 set pm2-logrotate:retain '7' && \
    pm2 set pm2-logrotate:rotateInterval '0 0 * * 1' && \
    mkdir -p logs

RUN ln -s /app/node_modules $HOME/.node_modules && \
    ln -s /app/node_modules /keg/node_modules
EXPOSE $GB_CD_PORT
CMD [ "yarn", "serve" ]

