ARG GB_IMAGE_FROM=ghcr.io/gobletqa/goblet-base:develop
ARG IMAGE_FROM=$GB_IMAGE_FROM

# ---- Turbo Prune Stage ---- #
FROM $IMAGE_FROM as goblet-pruner
WORKDIR /goblet/app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@gobletqa/conductor
COPY ./configs ./out/full/configs
COPY ./gobletRoot.js ./out/full/gobletRoot.js
# ---- End Stage ---- #

# ---- Install Stage ---- #
FROM $IMAGE_FROM as goblet-installer
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/json/ .
COPY --from=goblet-pruner /goblet/app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build Stage ---- #
FROM $IMAGE_FROM as goblet-builder
WORKDIR /goblet/app
COPY --from=goblet-pruner /goblet/app/out/full/ .
COPY --from=goblet-installer /goblet/app/ .
RUN yarn global add turbo
RUN turbo run build --filter=@gobletqa/conductor && \
    yarn install --frozen-lockfile --production
# ---- End Stage ---- #

# ---- Run Stage ---- #
FROM $IMAGE_FROM as goblet-runner
WORKDIR /usr/src/goblet/app

COPY --from=goblet-builder /goblet/app/node_modules node_modules
COPY --from=goblet-builder /goblet/app/repos/conductor/dist repos/conductor/dist
COPY --from=goblet-builder /goblet/app/repos/conductor/package.json repos/conductor/package.json
COPY --from=goblet-builder /goblet/app/repos/conductor/node_modules repos/conductor/node_modules
COPY --from=goblet-builder /goblet/app/repos/conductor/tsconfig.json repos/conductor/tsconfig.json

WORKDIR /usr/src/goblet/app/repos/conductor
ARG GB_CD_PORT=9901
ENV GB_CD_PORT=$GB_CD_PORT
EXPOSE $GB_CD_PORT

CMD [ "yarn", "serve" ]
